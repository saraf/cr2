{"version":3,"sources":["../../../../server/api/task/task.integration.js"],"names":[],"mappings":"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","file":"task.integration.js","sourcesContent":["'use strict';\n\nvar app = require('../..');\nvar request = require('supertest');\n\nvar newTask;\n\ndescribe('Task API:', function() {\n\n  describe('GET /api/tasks', function() {\n    var tasks;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/tasks')\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          tasks = res.body;\n          done();\n        });\n    });\n\n    it('should respond with JSON array', function() {\n      expect(tasks).to.be.instanceOf(Array);\n    });\n\n  });\n\n  describe('POST /api/tasks', function() {\n    beforeEach(function(done) {\n      request(app)\n        .post('/api/tasks')\n        .send({\n          name: 'New Task',\n          info: 'This is the brand new task!!!'\n        })\n        .expect(201)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          newTask = res.body;\n          done();\n        });\n    });\n\n    it('should respond with the newly created task', function() {\n      expect(newTask.name).to.equal('New Task');\n      expect(newTask.info).to.equal('This is the brand new task!!!');\n    });\n\n  });\n\n  describe('GET /api/tasks/:id', function() {\n    var task;\n\n    beforeEach(function(done) {\n      request(app)\n        \n        .get('/api/tasks/' + newTask.id)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          task = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      task = {};\n    });\n\n    it('should respond with the requested task', function() {\n      expect(task.name).to.equal('New Task');\n      expect(task.info).to.equal('This is the brand new task!!!');\n    });\n\n  });\n\n  describe('PUT /api/tasks/:id', function() {\n    var updatedTask\n\n    beforeEach(function(done) {\n      request(app)\n        \n        .put('/api/tasks/' + newTask.id)\n        .send({\n          name: 'Updated Task',\n          info: 'This is the updated task!!!'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          updatedTask = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      updatedTask = {};\n    });\n\n    it('should respond with the updated task', function() {\n      expect(updatedTask.name).to.equal('Updated Task');\n      expect(updatedTask.info).to.equal('This is the updated task!!!');\n    });\n\n  });\n\n  describe('DELETE /api/tasks/:id', function() {\n\n    it('should respond with 204 on successful removal', function(done) {\n      request(app)\n        \n        .delete('/api/tasks/' + newTask.id)\n        .expect(204)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n    it('should respond with 404 when task does not exist', function(done) {\n      request(app)\n        \n        .delete('/api/tasks/' + newTask.id)\n        .expect(404)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n  });\n\n});\n"]}