{"version":3,"sources":["../../../../server/api/thing/thing.controller.js"],"names":[],"mappings":"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","file":"thing.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/things              ->  index\n * POST    /api/things              ->  create\n * GET     /api/things/:id          ->  show\n * PUT     /api/things/:id          ->  update\n * DELETE  /api/things/:id          ->  destroy\n */\n\n'use strict';\n\nvar _ = require('lodash');\nvar sqldb = require('../../sqldb');\nvar Thing = sqldb.Thing;\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\nfunction responseWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction saveUpdates(updates) {\n  return function(entity) {\n    return entity.updateAttributes(updates)\n      .then(function(updated) {\n        return updated;\n      });\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if (entity) {\n      return entity.destroy()\n        .then(function() {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\n// Gets a list of Things\nexports.index = function(req, res) {\n  Thing.findAll()\n    .then(responseWithResult(res))\n    .catch(handleError(res));\n};\n\n// Gets a single Thing from the DB\nexports.show = function(req, res) {\n  Thing.find({\n    where: {\n      id: req.params.id\n    }\n  })\n    .then(handleEntityNotFound(res))\n    .then(responseWithResult(res))\n    .catch(handleError(res));\n};\n\n// Creates a new Thing in the DB\nexports.create = function(req, res) {\n  Thing.create(req.body)\n    .then(responseWithResult(res, 201))\n    .catch(handleError(res));\n};\n\n// Updates an existing Thing in the DB\nexports.update = function(req, res) {\n  \n  if(req.body.id){\n    delete req.body.id;\n  }\n  Thing.find({\n    where: {\n      id: req.params.id\n    }\n  })\n    .then(handleEntityNotFound(res))\n    .then(saveUpdates(req.body))\n    .then(responseWithResult(res))\n    .catch(handleError(res));\n};\n\n// Deletes a Thing from the DB\nexports.destroy = function(req, res) {\n  Thing.find({\n    where: {\n      id: req.params.id\n    }\n  })\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n};\n"]}